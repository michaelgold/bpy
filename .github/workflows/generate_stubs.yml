name: Generate Blender Python API Stubs

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Blender Version Tag (e.g., v4.0.1)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.x'

      - name: Extract Major and Minor Versions
        run: |
          import os
          version_tag = os.environ['INPUT_TAG'].lstrip('v')
          parts = version_tag.split('.')
          major_version = '.'.join(parts[:2])
          minor_version = '.'.join(parts[:3])
          print(f"::set-output name=major_version::{major_version}")
          print(f"::set-output name=minor_version::{minor_version}")
        shell: python
        id: version_extraction

      - name: Download Blender
        run: |
          wget "https://mirrors.ocf.berkeley.edu/blender/release/Blender${{ steps.version_extraction.outputs.major_version }}/blender-${{ steps.version_extraction.outputs.minor_version }}-linux-x64.tar.xz"
          tar -xf "blender-${{ steps.version_extraction.outputs.minor_version }}-linux-x64.tar.xz"
          mv "blender-${{ steps.version_extraction.outputs.minor_version }}-linux-x64" blender


      - name: Install Documentation Prerequisites
        run: |
          pip install bpystubgen

      - name: Generate API Docs and Stubs
        run: |
          cd blender
          ./blender --background --factory-startup -noaudio --python doc/python_api/sphinx_doc_gen.py -- --output=../python_api
          python -m bpystubgen ../python_api/sphinx-in ../python_api/output

      - name: Upload Stubs as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: blender-python-api-stubs-${{ steps.version_extraction.outputs.minor_version }}
          path: |
            python_api/output/**
